#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import time
import math

###########################################################
############## FCT CALCUL FACTORIEL #######################
###########################################################

def fact(n):
    i = 1
    result = 1
    while (i <= n):
        result *= i
        i += 1
    return (result)
##########################################################
########### FCT POUR 2 ARGUMENTS #########################
##########################################################

def main_fct(n, k):
    print("%d" %k + "-combination of a " +"%d" %n + " set:")
    result = fact(n) / (fact(k)*(fact(n - k)))
    print (result)

##########################################################
################ FCT POUR 1 ARGUMENT #####################
##########################################################

def main_fct2(d):
    fct_binom(d)
    fct_poisson(d)

def fact2(n, k):
    i = n
    result = 1
    while (i > (n- k)):
        result *= i
        i -= 1
    return (result)

def coef(n, k):
    res = fact2(n, k) / fact(k)
    return (res)

def fct_binom(d):
    begin_time = time.time()
    overload = 0.0
    d /= 3600.0
    m = (d * 3500) / 8
    p = m / 3500
    i = 0
    liste = list()
    print("Binomial distribution:")
    while (i <= 50):
        result = coef(3500, i) * p**i * (1.0 - p)** (3500 - i)
        liste.append(result)
        if (i > 25):
            overload += result
        i += 1
    i = 0
    while i <= 50:
        try:
            print ("%d->" %i +"%.3f" % liste[i] + "\t%d->" %(i+1) + "%.3f" % liste[i + 1] + "\t%d->" %(i+2) + "%.3f" %liste[i + 2] + "\t%d->" %(i+3) + "%.3f" % liste[i + 3] + "\t%d->" %(i+4) + "%.3f" % liste[i + 4] + "\t%d->" %(i+5) +"%.3f" % liste[i + 5])
            i = i + 6
        except:
            print("48->" + "%.3f" % liste[48] + "\t49->%.3f" % liste[49] + "\t50->%.3f" % liste[50])
            i = 51
    end_time = time.time()
    print ("overload: %.1f" % (overload*100) + "%")
    print ("computation time: %.2f ms\n" % ((end_time - begin_time)* 1000))

def fct_poisson(d):
    begin_time = time.time()
    n = 0
    result = 0
    overload = 0.0
    d /= 3600.0
    m = (d * 3500) / 8
    i = 0
    liste = list()
    while n <= 50:
        result = (math.exp(-m)*m**n) / math.factorial(n)
        liste.append(result)
        if (n > 25):
            overload += result
        n += 1
    print("Poisson distribution:")
    while i <= 50:
        try:
            print ("%d->" %i +"%.3f" % liste[i] + "\t%d->" %(i+1) + "%.3f" % liste[i + 1] + "\t%d->" %(i+2) + "%.3f" % liste[i + 2] + "\t%d->" %(i+3) + "%.3f" % liste[i + 3] + "\t%d->" %(i+4) + "%.3f" % liste[i + 4] + "\t%d->" %(i+5) + "%.3f" % liste[i + 5])
            i = i + 6
        except:
            print("48->" + "%.3f" % liste[48] + "\t49->%.3f" % liste[49] + "\t50->%.3f" % liste[50])
            i = 51
    end_time = time.time()
    print ("overload: %.1f" % (overload*100) + "%")
    print ("computation time: %.2f" % ((end_time - begin_time)*100) + " ms")

##########################################################
################ GESTION D'ERREURS #######################
##########################################################

if (len(sys.argv) <= 1):
    print("Enter a valid arguments.")
    sys.exit(84)

if (len(sys.argv) == 2):
    try:
        arg = int(sys.argv[1])
    except:
        print("Enter valid arguments")
        sys.exit(84)
    main_fct2(arg)
if (len(sys.argv) == 3):
    try:
        arg1 = int(sys.argv[1])
        arg2 = int(sys.argv[2])
    except:
        print("Enter valid arguments")
        sys.exit(84)
    main_fct(arg1, arg2)
